/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-photo2 {
  background-image: url(sprite.png);
  background-position: 0px 0px;
  width: 480px;
  height: 360px;
}
.icon-photo3 {
  background-image: url(sprite.png);
  background-position: -480px 0px;
  width: 480px;
  height: 360px;
}
.icon-photo4 {
  background-image: url(sprite.png);
  background-position: 0px -360px;
  width: 480px;
  height: 360px;
}
.icon-photo5 {
  background-image: url(sprite.png);
  background-position: -480px -360px;
  width: 480px;
  height: 360px;
}
.icon-photo6 {
  background-image: url(sprite.png);
  background-position: -960px 0px;
  width: 480px;
  height: 360px;
}
.icon-photo7 {
  background-image: url(sprite.png);
  background-position: -960px -360px;
  width: 480px;
  height: 360px;
}
.icon-photo8 {
  background-image: url(sprite.png);
  background-position: 0px -720px;
  width: 480px;
  height: 360px;
}
